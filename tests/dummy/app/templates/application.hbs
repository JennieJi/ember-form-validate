<h2 id="title">Welcome to Ember</h2>

{{#form-validate as |form validate|}}
  <legend>Form A</legend>
  <ul class="errors">
    {{#each form.fields as |field index|}}
      {{#if field.errorMessage}}
        <li>{{index}}: {{field.errorMessage}}</li>
      {{/if}}
    {{/each}}
  </ul>

  {{#form-validate as |formB validateFormB|}}
    <legend>Form B</legend>

    {{#each formB.fields as |field index|}}
      {{#if field.errorMessage}}
        <li>{{index}}: {{field.errorMessage}}</li>
      {{/if}}
    {{/each}}

    {{#if fieldDisplay}}
      {{#form-validate-field
      value=required
      validators=(validator 'Length' (hash min=0 excludeEdge=true) errorMessage='Field is Required')
      validatorGroup=(array formB form)
      as |validate errorMsg|}}
        Required(Multi group): {{input placeholder='Enter text ...' value=required focus-out=(action validate)}}
        {{input type='button' value='validate reguired' click=(action validate)}} {{errorMsg}}
      {{/form-validate-field}}
    {{/if}}
    {{input type='submit' value='Validate Form B' click=(action validateFormB)}}
    {{input type='button' value='Toggle Required Field' click=(action toggleProperty 'fieldDisplay')}}
  {{/form-validate}}

  {{#form-validate-field value=integer validators=validateInteger validatorGroup=form disabled=integerValidatorDisabled as |validate errorMsg|}}
    {{#test-wrapper}}
      Integer: {{input placeholder='Enter integer ...' value=integer focus-out=(action validate)}} {{errorMsg}}
    {{/test-wrapper}}
    {{input type='button' value=(if integerValidatorDisabled 'enable validate integer' 'disable validate integer') click=(action toggleProperty 'integerValidatorDisabled')}}
  {{/form-validate-field}}

  {{#form-validate-field value=range validators=(action validateRange) validatorGroup=form as |validate errorMsg|}}
    Range: {{wrap-input type='text' value=range placeholder='Enter value in range 5-10 ...'}}
    {{input type='button' value='validate range' click=(action validate)}} {{errorMsg}}
  {{/form-validate-field}}

  {{#form-validate-field value=emptyValidator validators=(if requireEmptyValidatorEnabled validateRequired) validatorGroup=form as |validate errorMsg|}}
    Empty Validator: {{input value=emptyValidator focus-out=(action validate)}}
    {{input type='button' value='validate empty validator' click=(action validate)}} {{errorMsg}}
    {{input type='button' value=(if requireEmptyValidatorEnabled 'disable require validator' 'enable require validator') click=(action toggleProperty 'requireEmptyValidatorEnabled')}}
  {{/form-validate-field}}

  {{#form-validate-field value=containsEmptyValidator validators=(array validateRequired (if integerContainsEmptyValidatorEnabled validateInteger)) validatorGroup=form as |validate errorMsg|}}
    Contains Empty Validator: {{input value=containsEmptyValidator focus-out=(action validate)}}
    {{input type='button' value='validate empty validator' click=(action validate)}} {{errorMsg}}
    {{input type='button' value=(if integerContainsEmptyValidatorEnabled 'disable integer validator' 'enable integer validator') click=(action toggleProperty 'integerContainsEmptyValidatorEnabled')}}
  {{/form-validate-field}}

  {{input type='button' value='Validate Form A' click=(action validate)}}
  {{input type='button' value='Validate Form A and Destory' click=(action 'destoryField' (action validate))}}

{{/form-validate}}
{{outlet}}
